{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getDate","Date","toUTCString","slice","Clock","state","date","timer","this","setState","window","setInterval","prevProps","clockName","props","console","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","timerId","handleClockVisibleFalse","event","preventDefault","handleClockVisibleTrue","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAEA,SAASA,IAGP,OAFc,IAAIC,MAELC,cAAcC,OAAO,IAAK,GAYlC,IAAMC,EAAb,4MACEC,MAAyB,CACvBC,KAAMN,IACNO,MAAO,GAHX,uDAME,WAA2B,IAAD,OACxBC,KAAKC,SAAS,CACZF,MAAOG,OAAOC,aAAY,WACxB,EAAKF,SAAS,CAAEH,KAAMN,QACrB,SAVT,gCAcE,SAAmBY,GACbA,EAAUC,YAAcL,KAAKM,MAAMD,WAErCE,QAAQC,MAAR,uBAA8BJ,EAAUC,UAAxC,eAAwDL,KAAKM,MAAMD,cAjBzE,kCAqBE,WACEH,OAAOO,cAAcT,KAAKH,MAAME,SAtBpC,oBAyBE,WACE,IAAQD,EAASE,KAAKH,MAAdC,KACAO,EAAcL,KAAKM,MAAnBD,UAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGZ,WAtCX,GAA2Ba,a,MCb3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWpB,OAAO,GAE3C,MAAM,SAAN,OAAgBkB,GAQX,IAAMG,EAAb,4MACEnB,MAAyB,CACvBQ,UAAW,UACXY,UAAU,GAHd,EAMEC,QAAyB,KAN3B,EA0BEC,wBAA0B,SAACC,GACzBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,KA5B9B,EA+BEK,uBAAyB,SAACF,GACxBA,EAAMC,iBACN,EAAKpB,SAAS,CAAEgB,UAAU,KAjC9B,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,cAAexB,KAAKmB,yBAC9CI,SAASC,iBAAiB,QAASxB,KAAKsB,wBAExCtB,KAAKkB,QAAUhB,OAAOC,aAAY,WAChC,EAAKF,SAAS,CAAEI,UAAWO,QAC1B,QAdP,kCAiBE,WACEW,SAASE,oBAAoB,cAAezB,KAAKmB,yBACjDI,SAASE,oBAAoB,QAASzB,KAAKsB,wBAEvCtB,KAAKkB,SACPhB,OAAOO,cAAcT,KAAKkB,WAtBhC,oBAoCE,WACE,MAAgClB,KAAKH,MAA7BQ,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECO,GAAY,cAAC,EAAD,CAAOZ,UAAWA,WA3CvC,GAAyBM,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.ab30dec5.chunk.js","sourcesContent":["import { Component } from 'react';\n\nfunction getDate(): string {\n  const value = new Date();\n\n  return value.toUTCString().slice(-12, -4);\n}\n\ntype State = {\n  date: string,\n  timer: number,\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    date: getDate(),\n    timer: 0,\n  };\n\n  componentDidMount(): void {\n    this.setState({\n      timer: window.setInterval(() => {\n        this.setState({ date: getDate() });\n      }, 1000),\n    });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.state.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId: number | null = null;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleClockVisibleFalse);\n    document.addEventListener('click', this.handleClockVisibleTrue);\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleClockVisibleFalse);\n    document.removeEventListener('click', this.handleClockVisibleTrue);\n\n    if (this.timerId) {\n      window.clearInterval(this.timerId);\n    }\n  }\n\n  handleClockVisibleFalse = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClockVisibleTrue = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock clockName={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}